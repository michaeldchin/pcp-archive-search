00:00:00 Well, that didn't sound very aesthetically appealing, appealing, unpeeling, you know, I'm
00:00:26 all about going fast, and hard, and doing lots of things. I hate being slow, and I hate
00:00:35 feeling like there could have been more I could have gotten done in the day. You know,
00:00:39 I hate feeling anything less than really motivated and really energized with whatever
00:00:44 I'm doing. And you know, listening to Digi's decompressions about how much he does that
00:00:54 all the time makes me go, ah, I gotta do that. But you know, a lot of that really comes
00:01:01 down to how long it's been, how long I've had to build up speed, or rather to build
00:01:09 up mental clarity. You see, I guess in two days, no, probably, okay, it's basically
00:01:23 right now, it's basically the anniversary of when I finally left my job, which is the
00:01:30 thing I had wanted more in my life than anything that I have ever had ever wanted before or
00:01:37 since it actually got. So this is like the first anniversary of something that I really
00:01:43 deeply care about. Because there's a number of reasons why, just the fact that you spend
00:01:49 most of your day doing something you don't want to do. But that, even when you get back,
00:01:54 it doesn't work as well because you're so tired. You get back from work and you're frigging
00:02:00 tired. You don't have quite enough energy to do the work you wanted to, you know? That's
00:02:07 what really made it stressful and annoying and made me hate it so much is that being
00:02:13 at the job makes it harder to do something else that you want to do instead, that you
00:02:18 want to be able to turn into a career. So it was like every video I was making, it was
00:02:23 really suspenseful to me whether or not it would be successful because every video that
00:02:27 was successful brought me one step closer to being able to quit my job. But if it didn't
00:02:33 get successful, then it wasn't necessarily a step closer, which meant another whole week
00:02:37 or two added on to the maximum time limit it would take for me to keep doing the job.
00:02:44 I became an absolute monster of antisocialness during this time. I became very much a nope
00:02:49 not going to do this, not going to do that. I feel like I've already explained this in
00:02:53 multiple different podcasty areas, but you know. So when I did quit the job, it still
00:03:04 took time to get into the right mental gears. Because like for example, when you're working
00:03:10 full time, working say five days a week on the other two days, it doesn't quite work
00:03:16 to just then do a different job. The whole point of having those two days off is because
00:03:20 you need the time off to unwind, to decompress if you will. So working on those days anyway,
00:03:28 it's still jumbled and messy and confusing and aggravating. Particularly when the thing
00:03:34 you are doing is blue collar and the thing you want to be doing is white collar because
00:03:37 my body is like there'd be times where I'd get like a whole week off, but my body is
00:03:42 very much used or at least was very much used to physical movement throughout the day. So
00:03:47 sitting at the computer was agonizing like every single day until about five days in
00:03:53 I would finally get used to it, but then it would be back to work again and I'd have to
00:03:56 readjust the other way. So you know quitting my job took me really took me months to really
00:04:07 get efficient at what I was doing throughout the day, but I could never be quite that efficient
00:04:12 because I was still living with my family where you know, there's something inefficient
00:04:18 when you live at home with people who are off doing their own things that aren't related
00:04:24 to what you're doing, which I know I'm sounding like a psychotic selfish maniac with this.
00:04:30 I'm not saying this is a terrible thing. You could obviously have a successful career
00:04:33 with this, but I'm all about being faster, being more efficient and like living now as
00:04:39 I do with you know, the guy who I work with and then also like another guy who also makes
00:04:45 YouTube videos and does art stuff. Like something about it clicks more. Something about the
00:04:52 fact that we're all doing the same kind of thing makes things faster. Maybe just the
00:04:56 fact that I'm living with roommates who are friends rather than family. It speeds me up.
00:05:01 I don't know. Maybe it's a presenteeism where I feel the need to be more efficient around
00:05:06 friends. I don't know what it is, but I just always feel like every time I'm in the kitchen
00:05:12 and like my dad walks in, it feels like it slows me down. Every time I am in the kitchen
00:05:18 and Ben walks in, it feels like it speeds me up. Don't know why it just is. Don't even
00:05:24 know how psychological it is. It might just be purely in my head, but I do think it does
00:05:29 make a huge difference. So after quitting my job in like the very end of the year last
00:05:34 year, it took me months to really build up speed, but I could never build up that much
00:05:37 speed because I was with my family. And then when Radcon happened and I moved over here,
00:05:42 I got slow all over again. I was like totally discombobulated. I mean, there would be moments
00:05:47 where I'd sit down and crunch out like the whole Kuriko vs. Haikyuu video in like two
00:05:53 days or like my whole how to understand themes video on my channel, which I put together
00:05:59 in like nine hours from concept to completion. So I still had plenty of moments of like being
00:06:05 fast, but there were just so many not fast moments in between them, you know, so much
00:06:12 build up and so much standing around. What am I doing right now? And it's okay for people
00:06:16 to live like that. Most people do, but I find that depressing. So finally, at some point,
00:06:24 I finally everything has just been snapping into place. It was really going back to my
00:06:30 families for a bit because I went back to my family's house for five days for Christmas,
00:06:37 although the days I was actually there was December 15th through the 20th, not on Christmas
00:06:43 because my family wanted me to do a specific thing on the 18th. And I'm like, well, in
00:06:48 that case, I'm not going to be there on the 25th. So I celebrated Christmas a week early,
00:06:53 got back home and I'm like, this is my chance because I took five days off probably the
00:06:57 first time in like four years, I took five straight days without with while neither working
00:07:03 on anything nor planning on working anything, nor feeling bad about not working on something
00:07:07 like I'm always I think I've taken like five day periods where I did nothing. But I was
00:07:12 like frantic about it and always eyeing the keyboard for when I was going to get back.
00:07:17 So I finally took five days of actual break, came back, and I'm like, this is my opportunity
00:07:22 to finally get fast. And it was and I did it. I fasted and I am still fasting
00:07:31 to take that pun more literally, I have been losing weight. I have been
00:07:36 showering more often, you know, almost every day.
00:07:42 My ankle situation is finally going to get resolved, I hope.
00:07:47 I sprained my ankle really badly way back in summer of 2015.
00:07:53 At work, I totally blame the job stupid fucking clean windows getting off ladders.
00:07:59 Grass was wet, sprained ankle, never completely healed. I guess because I'm a trampoline
00:08:04 addict. And I walk around weird, both digi and my brother have told me that I walk funny
00:08:11 when I bring up my ankle situation to them. So apparently I don't walk right. And that
00:08:16 makes it hard for my ankle to heal. And again, for a long time, I just couldn't stay off trampolines,
00:08:21 man, they're so much fun, they're so much fun. So I mean, most of the time, almost all the time,
00:08:26 I would keep my left foot off of trampoline, I wouldn't put pressure on it, I bounce on one foot.
00:08:32 But don't think that really helped because, you know, it's still bobbing around and stuff.
00:08:35 So I'm sure that kept it from healing. But I've been over here, living in Virginia,
00:08:41 no trampoline in sight for over a month. And it's still my ankle just gives, you know,
00:08:47 it's just a little bit achy, not enough pain to be annoying, but enough pain that I still
00:08:52 have to worry about it. That's the problem having to constantly worry about my ankle.
00:08:56 And did you was like, yo, you should get that looked at because I can't like take like a 30
00:09:01 minute walk before it starts to hurt, right? And it'll stay hurting for the next three days.
00:09:06 That's a problem. So I went to the ankle doctor and they said, try stretching it and take this pill.
00:09:11 And I did. And it didn't work at all. The ankle is still just as bad, possibly worse. So I went
00:09:17 there again the next month. And he was like, okay, don't stretch it. Don't move it. Don't use it.
00:09:23 Put on a big friggin boot thing. You know, if you ever see it's sort of like a cast,
00:09:27 but it's also like a boot. It's just got like these metal beams and straps all over it.
00:09:31 So if you've ever seen that kind of person walked around on their foot with that thingy,
00:09:34 that's what I've got. So yeah, now what happens is now everyone asks, what's wrong with your foot?
00:09:41 What happened to your foot? It got better. That's what happened to my foot. I am better off now
00:09:48 than the last time you saw me without question. But it didn't become visual until now. The problem
00:09:55 is finally being fixed. I can finally walk around without having to worry about it. It used to be
00:10:00 even having to walk over to the kitchen or walk it over to the other computer would be like,
00:10:06 I don't want to do it and use up ankle points. Now I don't got to worry about that.
00:10:11 So that's good. You know, I still can't like take long walks or anything, but you know,
00:10:16 I got to be moderate with my walking. But at least when I do walk, I don't have to worry about it.
00:10:19 And that's really nice. Incidentally, this is unrelated to what I was talking about. But sometimes,
00:10:24 you know, when you get like a throat bubble and it like feels all weird and it's really itchy and
00:10:28 you want to cough it out immediately, I've trained myself to just keep talking when it happens and
00:10:32 hopefully have a recording on when it's happening. Like I'll usually bust out my phone and try to
00:10:37 record it. But I'm usually not able to get it before it goes away. But thankfully this time I'm
00:10:42 actually recording something right now as I got the throat bubble caused by this angry orchard apple
00:10:48 apple cider. I think the bubble is mostly gone by now. But yeah, I'm gonna keep
00:10:52 Oh gosh, it gets really annoying and hard to not cough out anyway.
00:10:56 Oh, I'm spiking the microphone like a crazy man.
00:11:01 Okay, I turned down the gain. Look at these gains anyway. So yeah, my ankle is doing better. Friggin
00:11:12 What I mean is throughout the day, I have fewer and fewer things to worry about and be distracted
00:11:17 by. Because like, you know, I move into a new house, everything's in a different position,
00:11:22 everything just walking around takes some mental effort for the first like couple of days. It was
00:11:28 only like a couple of weeks ago where it finally everything evened out and I could walk around
00:11:34 without any any increment of conscious thought, you know. So that's good. Just no distractions,
00:11:41 nothing getting in my way, no medical problems other than the ankle. But again, it's it's more
00:11:46 when you work from home, having this thing on isn't an issue. The only time where I have to
00:11:50 walk around a lot is when I go to the groceries. And the only problem then is like old people going
00:11:55 how to let them ankle. I'm like, yeah. And they're just looking at me like, so yeah,
00:12:03 I'm like, mm hmm. I mean, I know what they're talking about because they're looking at my foot.
00:12:09 But you know, if you're going to say a random comment to a stranger in the grocery store,
00:12:15 prepare what you're going to say, like form your statement in your head fully.
00:12:19 Make sure they're looking in your general direction and then speak clearly or else
00:12:27 give up. Don't say it because they're not going to hear you. So with that in mind,
00:12:35 you know, I pumped out that whole Digi video about the fan service and I sat down with a list
00:12:41 of anime to watch. Because earlier this year, I believe in April, May or June, Digi made a list
00:12:47 for me at my request of shows that I might need to watch for upcoming videos. Because one thing
00:12:55 that was kind of annoying for me is that every time Digi had a new show to talk about, it would be
00:13:01 a show I haven't seen before. So I'd have to watch it from scratch every time, pretty much.
00:13:07 So I was like, hey, you know what'd be cool is if I could just like, watch all the shows in advance
00:13:12 that you plan to maybe at some point talk about, right? I think that's how it came about. The point
00:13:16 is he made a list called the shows for a debut to watch for possible upcoming videos. And he made
00:13:21 a list of all of them. Um, it's like 80 to 90 shows on the list. No, maybe it's more like 70,
00:13:29 I don't know. But, uh, by the way, the list isn't actually complete. He actually got all
00:13:35 the way up to the letter S and it gave up. So any shows that he wants to talk about that are
00:13:39 between T and Z, he has not listed on that list, but whatever. I decided to watch all those shows,
00:13:45 or at least as many as I could. And so I have been. I've skipped shows that are really long,
00:13:51 like a record seven, and I've skipped some things where he wants me to also read the manga, like,
00:13:58 frickin, uh, King of Bandits Jing, for instance. So like there, there, those are the only categories
00:14:04 that I've ignored shows where you have to also read the manga because I'll read manga when I'm in
00:14:09 the mood for it. And I've read manga, I've read some manga, not quite in the mood for it at the
00:14:14 moment, but when I'm in the mood, I'll do those ones. Not in the mood to watch something super
00:14:19 long out of nowhere at the moment, you know, so I discounted the manga ones, discounted the long
00:14:24 ones, but I've been watching everything else. And so yeah, I think it was like 60 or 70 of those.
00:14:30 And over the course of the year, I've been plowing through them, getting really good at
00:14:36 marathoning as a result. So after I came back from my trip with my family, I sit down and I have like
00:14:45 six or seven shows left. And I have nothing else to do for the rest of the month, right? I finished
00:14:51 the fan service video, that's the only video that needs to be made for the rest of the month.
00:14:55 So I sit down and I start watching them, and I watch one episode of Martian Successor Nadesco,
00:15:03 then I decide to take a shower. And then in the shower, I'm reminded of video games again. I remember
00:15:11 the idea of making video games, what it was like to make that one RPG that I made half of and posted
00:15:18 onto new grounds. And was reminded of how I keep going into video game holes, which is what I call
00:15:27 them, where I have the insatiable desire to program video games or do whatever I can to make video
00:15:33 games, you know, because, you know, artistic expression, man. And then I'm reminded of a video
00:15:44 that I had watched just a week or two before called object oriented programming is bad.
00:15:51 And that video remind reminding myself of that video made me realize that I should try
00:15:57 programming yet again. So first I'll tell you the story of how I gave up on programming. But
00:16:03 before that, I'll tell you the story of how I tried to program the first time. So I guess I'm
00:16:07 now just going to tell you my whole relationship with making video games. Yeah. Let's go.
00:16:14 My whole life I knew I was going to do some sort of entertainment media thing, right?
00:16:20 I didn't know I didn't realize that you're supposed to just use the word artist as a kid. I
00:16:24 didn't realize that the word artist from of any medium was the term to describe it. So as a kid,
00:16:30 all I could phrase it as was a someone who works in some sort of entertainment field. That's
00:16:36 probably even more articulate than I would have phrased it as a kid. So you know, throughout my
00:16:43 childhood and adolescence, I would go from one to the other like making cartoons on new grounds.
00:16:48 I was big in the new grounds for one year. I really thought that making flash day flash games
00:16:53 and flash animations was a cool idea. But you know, didn't really have the patience for it.
00:17:00 And I didn't I didn't know how to pirate flash, you know, how to make how to get flash or how to
00:17:08 I didn't have the desire to pirate it and I didn't know how I didn't even realize that
00:17:12 almost everyone was like I didn't understand yet at the time that most people on the internet
00:17:17 pirate everything, at least in communities such as new grounds. And even then, there are free
00:17:25 alternatives like live swift or at least there was I don't know that program still exists. But
00:17:30 you know, it's crappy and dated even for its age. But you know, it's still sufficient for animation.
00:17:37 If I really wanted to make animations, I would have used live swift and I would have made something
00:17:41 but had no patience, you know, tried art, you know, got went from being abysmal to being terrible,
00:17:47 which is an improvement. You know, tried this tried that, you know, made like one or two songs.
00:17:52 I felt like I was always getting something done, you know, I didn't ever go that long just doing
00:17:56 nothing. So I got I got like a familiarity with many different mediums. And at some point,
00:18:04 I decided that it's going to be video games, like that's the best one.
00:18:07 As a kid, I did make one video game in Windows PowerPoint, which is the slide show presentation
00:18:16 software. And because I because I realized at one point that you can program buttons in that
00:18:22 software, a button in Windows PowerPoint that if you program it, it will take you to whichever
00:18:32 other frame in the project you want to go to. So it was like, oh, hey, you could just arrange a bunch
00:18:39 of these buttons, and they take you to different frames, different slides. And you could essentially
00:18:45 program a game that way. So I just made a very simple choose your own adventure game, where
00:18:51 basically, you go up to a situation, and you're confronted with a problem, and you have three
00:18:56 options, and one will succeed, and the others will get you killed. So yeah, it was inspired by that
00:19:04 one episode of Arthur, where a bunch of the kids were playing that particular game. It was just
00:19:09 like it. I had based my entire design document off of that Arthur episode, not on any actual games
00:19:15 of that sort. I remember the project ended up being exactly 1111 frames long, and I felt pretty
00:19:24 accomplished in doing it. Made it when I was 10 years old, would have been 2004 on a laptop,
00:19:30 Windows XP, not like I had anything better to do.
00:19:37 When I was 16 or so, I was messing around an RPG maker, making some levels, making some items,
00:19:45 but then I was like, you know, I want to tweak things. I want to make the main character walk
00:19:51 slower or faster, or I want to have a specific set of animation frames for this item, and
00:19:58 doing all that just always was such a pain. It was like having these pre-built programs
00:20:03 that do all the work for you. It's like if I want to change something, it just sends me to the forums,
00:20:08 trying to figure out if I even can change it. It's not really that fun for me.
00:20:15 But over the course of watching YouTube videos on the internet, I got more and more inspired into
00:20:21 video gaming. At some point, it just became clear to me that games are the things I care about,
00:20:26 really the most in a way. I mean, not really counting YouTube videos, and YouTube analyses,
00:20:33 those are technically the zero thing I care about, but video games are the first thing I care about,
00:20:38 and videos like AVGN, getting me interested in how to think about games critically,
00:20:44 and getting me an appreciation for old games, and then the Game Over thinker was a big deal for
00:20:49 me. That really introduced me to the concept of artistic expression in a more meaningful way,
00:20:57 and creative voice, that kind of stuff. Also, extra credits, framing. It really framed video
00:21:07 game development as this huge series of insurmountable challenges, and that made it really sexy and
00:21:14 cool, and like, oh wow, all these incredibly impossible things that people are trying to figure out.
00:21:19 I'd like to figure that out. What really pushed over the edge was Jimquisition, presenting how
00:21:25 shit, and corrupt, and bad so many of the game developers, and even game publishers, and even
00:21:33 some game developers are with their business practices. And that made it even more interesting
00:21:38 for me. It seemed like not only would it be a fun challenge, but it would also be an easy way to
00:21:42 feel morally superior to lots of people by not being shit like that. And I was like, yeah,
00:21:48 I gotta do video games.
00:21:55 Now, when I was 17 and a half, that was when my dad finally started making me go to work with him
00:21:59 all the time. He finally brought me onto the family business full-time. He had gotten me to go and
00:22:05 clean windows with him sometimes, as early as like when I was 13. You know, just once or twice here
00:22:09 and there, you know. When I had free time, nothing better to do, and I could make some money that
00:22:14 way. So it was a great way to make money as a teenager. But when I was 17, that's when he finally
00:22:20 started to make me work full-time. And when I was 18, by then, I had built up finally a work ethic.
00:22:30 I finally had the ability to just push past being tired, or frustrated, or not inspired,
00:22:36 and just do the work anyway. An incredibly important and valuable ability. That's in combination with
00:22:45 really being inspired with video games and really thinking that I have them. I figured out what I
00:22:50 want to do with my life. So mentally, I was ready. Work ethically, I was ready. And I was really into
00:22:56 MLP at this time, and now it's kind of really uplifting me after a couple of years of teenage
00:23:02 depression. So the tide was right, and I just decided time to make a video game. So
00:23:10 what did I do first? I believe what I tried first. Don't remember exactly which one I did first,
00:23:20 but I think what I did first was I downloaded Multimedia Fusion 2. And that's a game making
00:23:29 software. And I messed around with it some. And then I made a game called Impossible Maneuvering.
00:23:39 It's basically one of those games where you move a symbol around an object like a square,
00:23:44 and you have to dodge other objects like an amaze without touching any of the objects
00:23:50 and to get to the goal without touching anything. It's basically just like that,
00:23:54 but where every level is totally different and every level has a different mechanic
00:23:58 and different graphics and stuff. So that's the kind of game I like, you know, games where
00:24:03 everything, there's always a lot of variety, things are always changing, there's a lot of
00:24:06 character involved. So it's that cliche genre of flash game tweaked to be exactly my kind of game.
00:24:15 So I'm still pretty proud of it, to be honest. Like, yeah, Impossible Maneuvering. I would
00:24:20 honestly recommend it, you know, it gets way too hard, way too fast, though. So it's something to
00:24:24 get frustrated bail out, unless you like a steep, unfair challenge. So then I thought, okay,
00:24:32 multimedia fusion is great and all, but it's not really a programming language.
00:24:36 It's basically like you throw a bunch of squares together, like it's,
00:24:40 it's sort of like trying to make a user visual interface, even though it is legitimately a
00:24:45 programming language. It's just kind of a kind of a shitty one. So I thought, I want to learn
00:24:53 action script, because that's the that's the code that flash uses. So I messed around with that a
00:24:59 bit. I bought I didn't just mess around. I bought a $50 action script 3.0 manual, and started
00:25:06 studying it over the course of a few weeks. And I was getting me I was learning some things like
00:25:11 object oriented programming, which basically is a way to like, chop up the code, like instead of
00:25:16 reading all the code at once, you can look at different little chunks of code at different
00:25:20 times without having to memorize all of it. And also stuff like classes where,
00:25:26 um, like certain objects can inherit properties from other objects. That way, you don't have to
00:25:32 like, type out everything all over again all the time. So that's a great that you know, that's,
00:25:38 that's a popular way to program and stuff. So I learned about that. Because when I made impossible
00:25:42 maneuvering, I had no idea what I was doing. Like, that game has very little complex programming
00:25:48 in it, because I knew nothing about how to make a game really. So it was a good idea for me to
00:25:53 make something so simple. But I wanted to make, you know, I wanted to get more of an idea about
00:25:56 the program. I couldn't, I was able to understand the idea of like how programming works and stuff,
00:26:01 but I couldn't even like, in terms of actually making something, even get so far as successfully
00:26:06 compiling something. I just couldn't figure it out. It was just, no, no, no, no, I just felt like
00:26:11 I really needed like someone who I was friends with who knew this stuff to explain it to me,
00:26:17 you know, going to a class would probably be beneficial at first, like just a couple of weeks,
00:26:23 so that I can get off to a good start. Really, just the best way would be to hire a personal tutor
00:26:29 or for the best, awesome, perfect tutorial to be out there somewhere. But none of those things were
00:26:33 true. I didn't really know anyone at this time. I didn't really know anyone on the internet very
00:26:37 well. Certainly not anyone who was like good at anything. Good at programming, I mean. So I put
00:26:45 an action script down, went back to multimedia fusion, and was like, okay, let's make something
00:26:49 else. Let's make something a little bit more ambitious, but not too ambitious. And I just,
00:26:54 I really wanted to do an RPG, like not like a big 50 hour Final Fantasy type thing,
00:26:59 more like a tight, short type thing. That's more about just being quirky and fun, very
00:27:05 Superstar Sega-esque and other games, you know, like Earthbound and stuff like that.
00:27:10 I've actually not played Earthbound, because as a teenager, it was not on the virtual console,
00:27:17 so I couldn't play it that way. And now as an adult who's finally willing to pirate games
00:27:22 and Earthbound is on the virtual console, I just don't have time for an RPG anymore.
00:27:26 But I have been very familiar with Earthbound and what it's about and what it's like. And I've,
00:27:31 in a sense, been a fan of it for a long time for like 10 years, because of that.
00:27:36 You know, because of Smash Brothers and reviews and retrospectives and such. And I did play the
00:27:41 first couple hours of it. So I'm a fan of Earthbound too. You don't have to play something to be a
00:27:45 fan of it. You know, taking influence from those kinds of things. From like, you know, Paper Mario,
00:27:50 other quirky RPGs. And I decided to make one of those. And, you know, not necessarily the
00:27:56 best idea. I ended up spending a year and a half making it. Late 2012 to early 2014,
00:28:02 that was how much time I spent making it. And I only made one half of it. I realized I'm not
00:28:07 going to be able to finish it. I'll just release the first half of it. So yeah, it was long and
00:28:13 tedious. And I did it way too slow. And I didn't know what I was doing. But I was like,
00:28:17 what am I going to do? Am I just going to sit around planning shit, learning shit forever
00:28:22 and ever and ever before I decide to just jump in? Let's just jump in now. Like, yeah, I'm going to
00:28:27 jump in prematurely. And I'm going to suck at it. But at least I'll be getting experience points
00:28:31 in knowledge when I do so. So I just did it. And yeah, I think it was a reasonable use of my time.
00:28:37 I wouldn't have been doing anything else in that time. You know, I would have had nothing else to
00:28:41 do once I came home from work. And I will say, I have no regrets about my work ethic during that
00:28:47 time. I really hampered myself into oblivion, almost never taking any sort of break, you know,
00:28:53 just using almost every single ounce of spare time I had. So yeah, for like a year and a half. So
00:29:02 it was messed up, you know. Over the course of making it, early into making it, I discovered
00:29:10 Digi Brony, MLP, and I became a fan of him and then other horseshoe crew people as that whole
00:29:16 group started to form. And here in Digi and Jesse talk about how hard it is to be a YouTuber on
00:29:22 their podcasts, made YouTubeing sound like a really interesting challenge instead. And I was like,
00:29:27 you know what, I think I want to get into this instead, because the whole 2013, that was when
00:29:32 like the analysis thing was really becoming a thing and a lot of different mediums. And I'd
00:29:35 finally learn to understand what I really liked about YouTube videos that I liked. Like I finally
00:29:42 figured out what I liked about certain kinds of reviews. Also with stuff like Roger Van Der Weed.
00:29:49 Roger Van Der Weed. That is a guy who does this series called Sonic Dyssected, which really
00:29:56 introduced me to the fact I really liked the idea of an analysis over a review. And I was like,
00:30:02 yeah, this is what I need to do instead. I'm going to drop video game development for now,
00:30:07 because this RPG I'm making, I'm only going to release half of it and I don't think anyone's
00:30:12 going to like it. So April 30, 2014, I finally posted the game on Newgrounds, got like a 2.5,
00:30:20 got like two views, no 2000 views, which is like basically nothing got like five or so reviews,
00:30:25 most of them complaining about the load time because it was like a 20 megabyte download,
00:30:31 which for like flash, for a flash application is a lot. And that was basically it. And I'm like,
00:30:37 you know what, whatever. The fact that I made something competent, something that only sometimes
00:30:44 glitches out, bugs out and crashes on my first attempt isn't too bad. And I like, I like the
00:30:52 ideas in it. I mean, it is basically boring, but I liked, I like the style of it. I like the feel
00:30:57 of it. So yeah, I don't regret any of that. But it was time for me to move on. It was time for me
00:31:03 to put video game development on the backboard or focus on YouTube instead. So I spent, incidentally,
00:31:10 the reason why I said I came out with everything with that game, April 30, 2014, was because I
00:31:15 specifically wanted to get it out before my birthday, so that I could tell everyone, yeah, I came out
00:31:21 with my first fully specced out game when I was 19, you know, that way I can make myself sound like
00:31:26 I have experience, you know, like, yeah, I made an adventure game when I was 10. And then I made a
00:31:35 a freaking dodging shapes game when I was 18. And then I made an RPG. I made half of an RPG
00:31:44 when I was 19. April 30 is my birthday. But I got it out 30 minutes, no, 15 minutes before my
00:31:52 birth minute. And I'm in the same time zone. So yes, it was when I was 19. I then immediately had
00:31:59 to spend three hours after posting it three hours fixing a game break and glitch. But, you know,
00:32:05 all video games have patches these days. No one counts that. So yes, I released my first fully
00:32:09 specced out RPG with a level up system, battle system, overall system, overall puzzles. Yeah,
00:32:16 it has puzzles, man. It has some somewhat complicated puzzles on it. Okay, it has one
00:32:22 somewhat complicated puzzle in it. And I made it all before when I was 19. I have so much experience,
00:32:30 man. And then it was all YouTube for me for the next solid year and a half or so.
00:32:40 And then Undertale came out. Had people recommending it to me up and down the street
00:32:47 corners, you know, because it's exactly the kind of game I like is the kind of game I want to play,
00:32:52 the kind of game I wanted to make, you know, it's very much I call YouTube. The genre I give to
00:32:58 Undertale is good RPG. It's like an RPG, but where everything is interesting and unique, you know,
00:33:05 it's not usually about grinding. It's usually about experiencing characters and a story and
00:33:10 interesting mechanics and having fun and doing creative things all the time. That's my favorite
00:33:15 kind of game. So that's why people were recommending it to me because everyone knows how much I like
00:33:20 Superstar Saga. And I was very much sold just by the fact that people were recommending it to me
00:33:25 for that specific reason. So I finished the video project I was working on, set that game aside.
00:33:30 Well, I set everything aside for that game, played it, made a video about it, really got into it
00:33:36 as much as I possibly could have hoped to.
00:33:42 And again, you know, I feel like I like that game probably more than a lot of its biggest fans,
00:33:47 but for a slightly different reason. Like, you know, the great music, the story, the characters,
00:33:52 the unique mechanics, the way it touches your own personal meta with video games. Like, everyone
00:33:59 has this meta with video games where they feel that strange sensation when they restart a level
00:34:04 and they experience the story again slightly differently. But no one knows about it. But you,
00:34:09 you know, that's like a meta element that everyone feels that that game taps into that really,
00:34:14 that really hits people really hard. And all of that brings the game up to like a 9.5 for me. But
00:34:19 what really pushes it into the 10 territory is just the personal connection of it being so exactly
00:34:26 like the kind of thing that I want to exist and the kind of thing I want to make and the kind of
00:34:30 thing I want to play. Toby Fox, that game really feels like I can feel Toby Fox's creative voice
00:34:36 every step of the way. And that I can, I feel like I come from such a similar place as where Toby
00:34:41 comes from, you know. And so that really stuck with me. And I'm like, I got to mess around with
00:34:48 multimedia fusion again. I just have this incredible urge to work on video games, not going to set
00:34:54 aside YouTube, not going to actually try to make a game, but I'm at least going to mess around,
00:34:58 I'm going to tinker around. And that's when I decided that I probably will make a game at some
00:35:03 point. But I'm going to do it the exact opposite way as I did the first time. The first time the
00:35:10 RPG, I deliberately ran into it with no planning, because I didn't even know how to plan. I didn't
00:35:15 know nothing about planning. So planning it for nothing wasn't going to work. I knew I was going
00:35:19 to have to go in and fail so that I would at least know what it's like so that I could then foresee
00:35:26 what the what the second attempt would be like, you know. So this time, I'm going to plan up the
00:35:34 wazoo. I'm going to come, I'm going to learn every single thing I'm doing. I'm going to make sure
00:35:40 I know absolutely everything I'm doing down to the bone before I actually start making it. So
00:35:47 this, I can spend, I can spend all the time I need, because it doesn't need to be my full-time
00:35:50 job. I can be doing YouTube in the meantime as my main job. This can take as long as it needs to.
00:35:57 I decided multimedia fusion wasn't the best choice for me. I decided I want something that was a
00:36:02 little bit more like an actual programming language, because as I just, as I said, the programs just,
00:36:08 they try to make part of the game for you, but it's hard to then make the game exactly the way
00:36:12 you want, because part of it's already been made for you. And I'm someone who always wants to tweak
00:36:17 you know, all the little variables to feel just right and just a little bit more unique, you know.
00:36:24 So I checked out Game Maker, right? I believe I actually bought it for like 100 bucks. I also
00:36:28 bought a $25 book on design flow. What's it called? Like design methods, ways to use the
00:36:35 object-oriented programming in a good way. How to get the program to communicate with itself,
00:36:40 to get the code flowing up and down the tunnels in an efficient manner. I know I worked around
00:36:45 with that for like three chapters, and it was just kind of going over my head, and I was just like,
00:36:50 okay, you know, this is fine and all, but you know, time for me to get back to videos. I really got
00:36:56 to focus almost all my timeline videos. Another six months or so goes by, or nine months, and cut to
00:37:05 a few weeks or so, or a month or so into living here in the Radcon house in the Colin Castle,
00:37:11 where I suddenly fall into a video game hole again. I'm supposed to be making videos, supposed to
00:37:19 be watching anime, but I make the foolish decision to watch YouTube, which is a decision I make like,
00:37:25 you know, 50 times a day, but I watched the wrong video this time. I decided to catch up on the
00:37:30 Gymquisition's Best of Steam Greenlight Trailers series, where Jim Sterling will watch a trailer
00:37:39 for a Steam Greenlight game and commentate over it sarcastically. Specifically, Steam Greenlight
00:37:44 trailers that are obvious like, big rigs over the road racing tier shit, right? It's like hundreds
00:37:51 of episodes along this series, and I'd watched like all those episodes last year, but I decided to
00:37:57 catch up again, which was like 50 episodes. And remember when I said about how much I'm drawn
00:38:03 to challenge, but I'm also drawn to the idea that things are easy, or rather that no matter how bad
00:38:08 I end up failing, I'll be better than a lot of people. I'm like, wow, watching these greenlight
00:38:13 trailers, it's like, if I made a game, no matter how bad I fuck up, I will be better
00:38:21 by leaps and bounds than all of these people. God damn, I should make video games. I should
00:38:29 make video games. I should make video games. I should make video games. I should make video games.
00:38:41 This chair is loud, and I decided I should make video games. So I did what I described as falling
00:38:45 into a video game hole, where I wasted three days messing around in programs, even messing around
00:38:53 in Unity. I was kind of kicking around the idea of like, you know, what about 3D modeling? You know,
00:38:58 I don't plan on trying, even trying to make a 3D game anytime soon. Anytime this decade, probably,
00:39:04 if ever. But you know, 3D modeling, it can still be fun.
00:39:09 Open up multimedia fusion again, just because I'm much more familiar with that program.
00:39:14 I was trying to mess around with certain, I keep saying mess around, but you know, I was trying to
00:39:17 like, hash out like a certain mechanic that I had in my mind. And I was having a fun time programming
00:39:25 it and all. But then, very quickly, it just got too complicated for me. It just got too tricky,
00:39:31 and I had to give up. And I'm like, God damn it, I think I just don't have the brain to be a programmer.
00:39:36 I don't have the attention span. I don't have the ability to study, and like, just, and just be good.
00:39:43 You know, too friggin' dyslexic for that shit. I don't know if I, I don't know what it is. I guess
00:39:48 just being on disciplines, blah, blah, blah. I don't know, I don't think it's not discipline,
00:39:55 I just think I just literally don't have the mental capacity for programming. That's the
00:40:00 conclusion I came to at the time. But stick with me here, okay? I'll get back to that in a minute.
00:40:06 So I decided that what I should do is get other people who are actual programmers and hire them
00:40:13 to do the programming. Now, I know what you're thinking. Well, what some of you might be thinking,
00:40:17 which is, oh, you're an ideas guy. You have all these great ideas for games, but you just
00:40:24 need someone else to make them. That's not what it is at all. I can have the idea for a game.
00:40:31 And design all, like, and design all the mechanics. Think about how, and like, draw it all out.
00:40:37 Design all the levels. Do all the art. Or at least most of the art. I mean, I could do competent
00:40:45 art if I put a lot of time into it, believe me. And if it was a certain kind of style.
00:40:51 I could basically do everything except for making the music and doing 80% of the programming. That
00:40:58 was my conclusion. My idea was not, I don't even have to think about the programming, but rather,
00:41:03 I would hire a professional programmer to do like the main meat of the work, but I will closely
00:41:09 observe. And he will tell me, he or she, okay, equal opportunity. Here she will tell me
00:41:16 what they're doing and how the mechanics are working. And they can guide me through it.
00:41:21 And then I can plug the rest of the game into that, you know, like, they design the basic
00:41:26 controls. And then they design, like, how, you know, like, certain objects react to it. And I
00:41:32 can study that and they can tell me and they can teach me. And then I can make little tweaks to
00:41:37 it as I need to. That was my idea. Through that, through that idea up on Twitter. And a certain
00:41:44 fan of mine and TPC fan in general, I think, Joji's magical supplies, or Joji's magic supplies,
00:41:51 contacted me saying, Hey, I'm a programmer. I'd be interested in this. So we got into contact. And
00:41:57 I was like, Okay, here's some ideas for a game I have. I'd like you to put together a really basic
00:42:02 prototype that would do this, this and this. If you do it, I'll pay you this amount of money.
00:42:06 But Joji, listen, you can take as much time as you need to. Rather, I want you to take as long as
00:42:15 possible. Because I'm busy. I'm making YouTube videos and all, you know, I'm busy with all that.
00:42:20 So I want you to take a long time because I think it's going to be well over a year before I'm
00:42:25 even starting to seriously plan about games I want to make, right? He's like, Cool. So, you know,
00:42:32 he comes out with some early drafts of the prototype in Yada Yada. And again, he's taken a
00:42:36 long time like I told him to, which is fine because he has things to do and stuff, you know,
00:42:41 he has school and stuff. So all that was kind of on the back burner. I went back to making videos,
00:42:48 you know, went to see my family for five days, you know, came back, make a fan service video,
00:42:52 you know, decided to finish off that anime watched one episode of Martian Successor in the Desco.
00:43:00 Then I went off to take a shower. And as in the shower, I was reminded of all the things that I
00:43:06 just told you about, except for one thing that I forgot to mention, which is that a couple of weeks
00:43:14 prior, I happened to stumble upon a video. And this video is what really triggered me to remember
00:43:20 all these things as I was taking a shower. It's this video called OOP is bad, which OOP stands
00:43:28 for object oriented programming is bad. And I was like, huh, I got to click on this. And he's like,
00:43:37 this will be the most important video you will ever watch object oriented programming is universally
00:43:45 accepted in the industry. No one will listen. No one will believe me. But it's actually the worst
00:43:55 thing ever. Okay, I'm sorry. He doesn't sound like a libertarian. Okay, he's perfectly rational.
00:44:04 You know, it's a 40 minute video. I understood like 60% of it perfectly, I think.
00:44:09 And it yeah, I was like, huh, interesting. But that made me think about game design again.
00:44:15 So fast forward to a few weeks later, which is now a week ago, I get out of the shower.
00:44:21 And I decide to not watch that episode of Nadesco episode two, I decide to download
00:44:27 Godot, which is a new game design engine, similar to Game Maker, similar to multimedia fusion.
00:44:35 But like supposedly better, maybe it'd be better for me and it's free. So I downloaded it. And I'm
00:44:41 like, yeah, this is an engine. It's good. Oh, I got tired of it in like five minutes.
00:45:05 And that was what really made me realize I don't think these programs are for me.
00:45:09 Maybe I'll move up to them and later on, I know that professionals use them.
00:45:13 I mean, like, okay, look, you know, Undertale, made in Game Maker, sure, but like
00:45:22 Undertale isn't the most technically impressive game out there. Whereas like, okay, with multimedia
00:45:29 fusion, for instance, you know, I released it in 2014, that same year, five nights at Freddy's and
00:45:36 Freedom Planet come out, also made in multimedia fusion. You know, five nights at Freddy's is
00:45:42 fairly somewhat technically impressive, but just the fact that it has pre-rendered graphics, I guess.
00:45:47 But Freedom Planet is quite technically impressive, just the fact that the character has 360 degree
00:45:52 movement, I think. It's like, how do you even do that in multimedia fusion? Dang.
00:45:59 So clearly people know how to use that stuff professionally, but I didn't. I just think
00:46:04 having these programs that do have to work for me just messes me up when I want to tweak things.
00:46:09 So I'm like, you know what? Forget about it, though. I want to try C++, but it's programming.
00:46:16 Can I really do programming? And I was thinking about that OOP video, and I watched it again.
00:46:21 Why object-oriented programming is bad. I watched it again, and this time it really clicked with me.
00:46:27 Basically, what the guy is saying, and I'm sure he's making plenty of arguments that actual
00:46:32 programmers have already heard before, because Nate was telling me that he's already heard
00:46:36 all the arguments before. Because Nate's an actual professional programmer, by the way.
00:46:40 I don't know how many times he mentions that on TBC, but he's a professional programmer.
00:46:44 That's his main job right now, that he's trying to quit. But his job involves a lot of objects
00:46:51 and classes and stuff, and he tells me he's heard what the problems are. He knows what the problems
00:46:56 are. I've never heard of the problems. I've only ever heard good things. What this guy was saying
00:47:01 is that basically, let's say you have 10,000 lines of code. That's too many lines.
00:47:05 Let's split them up. If you split them up, like, okay, let's have 100 lines of code over here,
00:47:10 and 500 lines of code over here, and 200 lines of code over here, and 30 lines of code over here.
00:47:16 That way, you'll only have to keep track of so many lines at a time.
00:47:23 But what the guy was saying was that, basically, when you have all these different sections,
00:47:30 you still, you still ultimately have to know everything in the program, if you want to really
00:47:37 make stuff happen. But now, not only do you need to know all 10,000 lines of code, but you now
00:47:44 have to know dozens, or even hundreds, of all the tunnels that connect them. You just added
00:47:51 more complications. You have more stuff you have to keep track of, because you have to keep track
00:47:56 of how all the different sections communicate with one another. You have to keep track of all
00:48:01 the different tunnels that you've dug. So what he says is that it basically only makes things more
00:48:07 complicated, not less. And with classes as well, you know, you make an object like, say, box. And
00:48:16 box has its own programming. And then let's say you want to make a blue box. Well, you don't have
00:48:22 to make box all over again. You just make it blue box and give it the category of box to give it
00:48:28 the class of box. So the blue box immediately inherits everything that the box had. And now you
00:48:35 just add a little bit more onto it to make it the blue box, you just add a little bit more detail.
00:48:41 Then you could make blue box with a spike on top. And then you just give it that you just give it
00:48:47 the class of box and the class of blue box. And then you add a little bit more code to account
00:48:53 for the spike. That sounds like a great idea. But like, basically, it seems like there's a lot of
00:48:57 people out there who are like, yeah, but then what if you accidentally change something in box
00:49:03 or something? What if you want to change something in box just slightly, but then it makes the spike
00:49:07 go haywire or it makes the blue turn pink? You never know what's going to happen. It's like building a
00:49:13 house of cards, they say. And I'm like, oh my gosh, you're right. Fuck object oriented programming
00:49:21 in the ass. Now since then, you know, a week has passed since then and I've learned more and I'm
00:49:25 like, okay, I think there's like a middle ground here. But there's no question I really abused
00:49:30 objects and classes when I made my RPG. And with that in mind, I looked back into the memory banks
00:49:38 of when I was making that game. Because like, if you were to play that game, you would probably
00:49:44 be astonished that it took me a year and a half to make that took me 18 months to make that because
00:49:48 it's you can beat it in four hours, it has almost no mechanics really. It's a very simple, like linear
00:49:55 level up system to looking back, I spent at least 50%. But honestly, maybe up to 80% of my time that
00:50:07 I spent on the game was spent trying to get the code to work. And usually that was because majority
00:50:15 of the time I spent trying to get the code to work, not writing the code and structuring the code,
00:50:19 but just going back and forth, figuring out what I'm doing wrong, you know, debugging things,
00:50:24 figuring out what the glitches are. Most of that involves most of the thing that was slowing me
00:50:29 down. Most of the thing that was eating up my time was trying to figure out how all the different
00:50:34 objects were communicating with one another. That's what was really tricking me out and slipping
00:50:40 me up. Unless I'm remembering it wrong, but it was a pretty big part of my life. So I think I
00:50:45 remember it correctly. So I'm like, I'm going to try and program now and not and like do as little
00:50:56 objects as possible, as little classes as possible. I'll only do it when I find it to be absolutely
00:51:02 necessary. And with that in mind, things were so much more clear for me. And I picked up C plus
00:51:09 plus and I, and like, I'm having a great time with C plus plus because for one thing, it seems
00:51:15 like I don't know if something about it just really just really clicks with me just really
00:51:18 click clicks with me as if it as if there's a C making a clicking noise and then some plus
00:51:26 signs making me click multiple times. But also because of Bucky Roberts of the new boston.com
00:51:34 and his god tier tutorials. I've known about Bucky Roberts of the new boston.com and his god tier
00:51:41 tutorials for like five years now. Because like five years ago, I was messing around with HTML
00:51:46 wanting to make a website. And I found out about his tutorials and I watched it and it was it was
00:51:50 great. I actually made another website on just this year for my dad's business. Basically that
00:51:56 was how I was able to quit my job was my dad was like, make a business for me and you can take the
00:52:01 winter off. So I was like, sorry, make a website for me and you can take the winter off because
00:52:06 the winter is very slow for window cleaning anyway. So I did that. And by the time winter was over,
00:52:13 I was making enough money on YouTube to leave. So yeah, I made a website, but I don't think I
00:52:18 would have been able to do it if it weren't for hit if it weren't for the fact I went back and
00:52:22 watched his tutorials again. And and yeah. And so when I wanted to get to C plus plus, I'm like,
00:52:29 yeah, I'll watch Bucky Roberts's tutorial on C plus plus. And he's just such a good everyone
00:52:35 every tutorialist should just study how he does it. Because he'll he'll always give you a metaphor.
00:52:43 He'll he'll always try to really truly analogize what's happening in the computer. He'll be like,
00:52:48 now you may be wondering why I'm putting an equal sign here. Well, the equal sign is telling
00:52:54 the computer to do blah, blah, blah, blah, blah, blah, you know, if you didn't have the equal sign
00:52:58 here, the computer would be going, so wait, what do you want me to do with this? So like he'll
00:53:04 he'll always be he'll be walking you through every step. And he yeah, it's it's good. Another great
00:53:12 thing he does is he'll acknowledge misconceptions that you're likely to have. We're like, it's
00:53:21 kind of hard to phrase it unless I use an actual example from an actual thing that I can't think
00:53:25 of one at the moment. But like, he'll understand he understands what a normal person thinks like
00:53:33 as distinct from a program. And he's like, Okay, now that we've typed out this bit of code,
00:53:39 you're probably going to think because of logical sense that you would do this, right? Well, let's
00:53:44 try it out. And as you saw, the code actually did something different than that. So you're probably
00:53:51 thinking, So what the heck? Why did it not do the thing I thought it would do? Why did it do this
00:53:54 weird thing? Don't worry, let me explain. And then he'll explain like he'll really walk you through
00:54:00 it and give you a true understanding of what you're doing. The other thing that I love is that you
00:54:07 get immediate results with with any good tutorial. Like I just can't do a manual man. I just I just
00:54:16 can't learn anything unless I do it myself and internalize it. That's the only way I can learn.
00:54:20 I'm sure that means I'm sure that equals I have a learning disability but oh well.
00:54:28 You work with what you got, man. Because like with with C plus plus, it's like you just you open
00:54:34 up a new you go and download a compiler software, you open up you make a new file and it has the
00:54:40 default like text in there already has the default code. And you just you just type in
00:54:46 something like hello, blueby, you hit F nine. And then you see a command prompt show up and hello,
00:54:55 blueby showed up, you have this immediate feedback with what you did. And you can change things you
00:55:01 can learn one step at a time and learn how to change what results you're really building on it.
00:55:08 You know, it's like finding out the one plus one is two, and then going on from there until you
00:55:12 eventually get to algebra. And then more, I guess. Whereas, you know, if you read just a manual that
00:55:22 just goes through everything like as like an encyclopedia, it's like it's like if you don't
00:55:28 know anything about math and you're reading about all of math before you actually do any of it yourself.
00:55:34 So yeah. That's what's great about Bucky Roberts' tutorials. And so I got halfway through his C plus
00:55:43 plus tutorial. And then he started talking about memory and assembly. And I'm like, okay, this is
00:55:52 getting pretty high level. I'm going to take a break for now. I'm going to I'm going to wander
00:55:55 around with other types of computer stuff. I was figuring I should learn C plus plus from
00:56:01 other people to to get other perspectives and learn other things. And I basically like,
00:56:08 basically, there were people with videos saying, you should try to learn assembly, you should try
00:56:13 to learn binary, and how assembly code works, because that will give you a better understanding
00:56:18 of how C plus plus works. So here's if so let me explain what assembly is to those who don't know.
00:56:25 Um, imagine you're watching YouTube, if you use your mouse and you click the middle of the screen
00:56:32 to hit pause, that means basically, you know, your mouse has told YouTube to pause the video.
00:56:40 But it's more like this, YouTube, like YouTube's, the website of YouTube, which is, you know,
00:56:47 like the video player is probably JavaScript, I assume. So the JavaScript code that represents
00:56:52 the YouTube player has been told to stop the video. So then JavaScript goes over to what I
00:57:00 assume is C code. No, no, I don't know what I don't know what code JavaScript is based off. Is it
00:57:04 based off C code? I actually don't know. Based off something like that. And it tells that code, hey,
00:57:11 let's pause the video. And then the C code or whichever one actual programmers, please correct
00:57:16 me on everything in this video, I want to learn and I want to not be wrong. Okay, then the C code
00:57:22 looks down and goes, Hey, assembly, we want to pause the video. And assembly code goes, okay. And
00:57:30 then the assembly code goes to the actual friggin computer and tells the actual like wires and
00:57:39 gates and hardware of the computer to do a different thing to pause the video. So assembly code is
00:57:48 directly controlling the computer. Even if you have a programming language, the program like C++
00:57:54 or JavaScript, or Python, I guess, those languages are only telling other languages to tell assembly
00:58:02 what to do. So learning assembly is can be very useful, because then you'll know exactly what's
00:58:10 happening with your computer. Well, you won't automatically know, but you'll know how you'll
00:58:16 know how to figure it out. You'll be able to look into the individual numbers and the individual
00:58:21 memory registers of the computer. It's sort of like indirect, it's sort of like putting up a
00:58:27 microscope to your actual to those actual wires going on down there. It's like putting up a
00:58:32 microscope to the actual memory banks. So I thought I want to get into assembly. I know it's way more
00:58:40 complicated. But as long as I can find a tutorial like the new Boston, I know I'll be able to do
00:58:46 it just fine. But there just aren't any. And I'm like, well, dang, I learned a decent bit about
00:58:54 assembly, I learned more about how binary works, and that's super cute. But just no tutorial guide,
00:59:01 which is here, let's incrementally add stuff on to a compiler. I mean, there are some tutorials
00:59:08 like that, but they're like weird and have terrible audio and like want you to download a stupid
00:59:13 program. I don't want to download. So and it wasn't working out like there is a guy who has a series
00:59:21 on assembly, where he goes through it step by step. But he does it badly. He explains what's
00:59:27 happening badly. The first 14 episodes are just him reading from the book and not actually giving
00:59:36 you a tutorial. So my standards are just way too high because of Bucky Roberts, man.
00:59:42 So that's what I've been doing, you know, trying to get into the arts, trying to get into other
00:59:46 mediums, because you know, I feel like a couple of weeks ago was when I finally got over this sort
00:59:53 of obsession with analysis that I've had for a couple of years. At this point, there's no analysis
01:00:01 that can come out that's like fundamentally more amazing than anything I've seen before. Like,
01:00:05 I'm impressed by it a lot still. But I'm like, you know, I kind of know all this stuff now.
01:00:11 So yeah, not really. I'm finally at a point where something being analysis doesn't make me
01:00:16 more interested in it. You know, I'm basically just as interested in just a normal review,
01:00:21 if the review is entertainingly delivered, and makes good points, even if it is still a review.
01:00:27 And I'm just more interested in any other kind of ways to make a video entertaining.
01:00:32 So I feel like I basically got as good at YouTubing as I really need to be. Like, obviously,
01:00:41 I could still be a lot better at writing, and I could still be a lot better at narration.
01:00:47 So, you know, I might still be putting a lot of effort into those at some point.
01:00:51 But with editing, I don't really need to make that many more improvements.
01:00:54 Like, I could, I'd like to eventually. But really, my goal was that for all year,
01:01:01 my goal has just been to get faster. Because there's really no need to make something that's
01:01:05 specced out with lots and lots of new effects, like Nerdwriter always does. You know, he's always
01:01:10 trying to find new tricks and traps to use. I mean, basic editing is really fine.
01:01:18 You know, making the editing really special all the time doesn't really add that much.
01:01:24 But you know, if the videos I'm working on ever get boring as a result, then maybe I'll
01:01:28 reconsider it. But for now, like, the level of editing skill that I have at the moment is fine.
01:01:32 And then I just wanted to get really fast at it. And as of now, I'm pretty much as fast at it as I
01:01:37 need to be. So don't even need to worry about that. So I guess I had gotten kind of bored,
01:01:42 but I didn't even realize it. Like, I'm really content with how videos are going. And when I
01:01:47 got into programming, it was like super exciting. I'm like, this was the most excited I've been
01:01:51 since getting into analysis. But when I got into analysis, I was still out of clean windows
01:01:56 almost all day. But this time I get to spend all day every day working on it. And I also got
01:02:01 myself a tablet, a drawing tablet, just a simple Wacom bamboo, no screen, nothing fancy like what
01:02:07 Digi has. But Digi getting a tablet and talking about how much he wants to do art, motivated me
01:02:12 to do more art because I'm like, my I have one goal with art, which is to never be less good
01:02:17 than Digi. My goal is to always be better at art than Digi is. Because otherwise, that would be
01:02:25 embarrassing. So I might have to like just do a whole comic series, just so I can get experience
01:02:32 in drawing and stay ahead of the curve, depending on how good he is. So yeah, getting into all these
01:02:38 mediums and entertainments, other mediums. I was thinking I was just going to focus more and more
01:02:44 on making videos and watching anime so that I can buff up my anime expert knowledge when making
01:02:50 anime videos. And I'm going to do that. I'm going to be making lots of videos. I'm going to be spending
01:02:55 lots of time watching anime for sure. But not as much as I thought I was going to. I thought I was
01:03:01 going to be making lots more videos and making lots more money. But really, the way that this job
01:03:08 is right now is basically perfect. Because the amount of money I make from the job as of the last
01:03:15 couple months is high enough that I only need to make like three to four, sometimes five videos a
01:03:20 month. And that's how much Digi seems to want to be making as well. And it's like that gives me so
01:03:28 much more time to do anything else I want with all that free time. On some level, I guess I'm
01:03:34 supposed to feel like I'm cheating people out of their money because they patron Digi and
01:03:38 indirectly me. I should be spending all that time and time to make more and more videos, right?
01:03:44 But technically, if I'm making an average amount of videos, three to five, the fact that I get
01:03:49 them done so quickly is just because I've worked really hard at getting fast. So I have earned my
01:03:55 ability to spend 10 straight days doing whatever I want for the last week or so of December,
01:04:02 which is what I've been doing. So I guess my goal is to get the YouTube work done as fast as
01:04:07 possible most of the time. Make sure it's good. Enjoy it. I do love making videos. Don't get me
01:04:12 wrong. I just don't have any I just am not there's just not a whole lot more new stuff for me to do
01:04:20 in a way. So really just focus on getting it done as efficiently as possible while still being high
01:04:26 quality and then be super speedy on cramming and all these other things I want to do in the meantime.
01:04:35 Again, I thought I was gonna be spending all the free time just getting better and better at videos.
01:04:39 I was just squarely focused on videos for like two straight years. But now I think I've I think
01:04:45 I think I'm basically leveled up as far as I need to be for the most part on videos and I can focus
01:04:50 on other things. This is a really big deal for me. Okay. I have been like, I've just obsessively
01:04:56 think about videos, how I'm going to do them, how am I going to get better constantly for like two
01:05:01 and a half years now. It's completely consumed in my thought, except for you know, sometimes I'll
01:05:06 be in a video game hole, but then feeling bad for it because I'm still obsessed with videos. I've
01:05:10 just been so completely consumed by writing and the narration and editing and all those things
01:05:15 all this time. And now as of just a week ago, you know, I walk back in to watch Nadesco episode
01:05:23 two but decide to not and I've gone on this completely different curveball direction.
01:05:27 So I just feel so excited. I feel so phoenixed from the ashes right now. The ashes of having a
01:05:37 great time. I didn't burn up. I'm just doing even more good. And then just today, I took another
01:05:45 random curveball down the path of memes. I've been getting really into the Shrek butt or
01:05:54 B movie butt meme. What a great concept. You know, I think what makes that meme work
01:06:00 is it feels like something that a computer algorithm created. Like throughout the internet,
01:06:07 there's just certain things that like algorithms do that are funny. Like I don't know if you guys
01:06:11 know, but there are certain YouTube channels that YouTube generates itself algorithmically,
01:06:16 where it'll take a topic that's popular and then like make a channel out of it like a tag like
01:06:22 anime topic or you know, Lord of the Rings topic is a channel that just compiles popular videos
01:06:31 that have that tag. That way people can subscribe to that and lots of people do subscribe to those
01:06:38 channels as a way to get like a feed of good content from that category. But it's funny because
01:06:44 it's it's done automatically like when YouTube decides that there's a certain topic that's
01:06:49 popular, it'll make one. Not like through any human, it's just through a computer. And what's
01:06:55 funniest is that the about tab, the about page of these channels is always the first paragraph of
01:07:01 the Wikipedia article, copy pasted in, and it always cuts off randomly at some point,
01:07:06 followed by this channel was automatically generated by YouTube. That kind of stuff is
01:07:11 really funny. And I feel like these, these like, you know, Shrek, but every time Shrek shows up
01:07:16 the video, it speeds up by 10% videos. It feels, it feels like it's a parody of that kind of thinking.
01:07:24 Because there's no humor to the way that it's delivered. You know, it's not like, here's a
01:07:28 funny video guys. You know, there's no like text on screen being like, I hope you like it. It's just,
01:07:34 it's just exactly what it says it is. You know, like Shrek, but every time Shrek shows up,
01:07:41 B movie plays instead, you know, it's as if some algorithm out there decided that this needed to
01:07:49 exist for some reason. Hippo made an amazing one. A feat like just yesterday, which is a Shrek,
01:07:57 but every time Shrek's face appears, the video ends, which made me giggle so hard. That was like,
01:08:05 okay, I need to make one now. So today, I was looking around for something to meme. And I
01:08:11 decided, and I had an idea, and so I posted it. So you can go to my channel, Devugos to Saturn,
01:08:15 to check it out. It's a, the Ghost in the Shell standalone complex opening, but every time Motoko
01:08:23 appears, the Sherlock Holmes in the 22nd century opening plays, which I'm quite proud of, quite
01:08:30 satisfied with. Then they got lunch, and then I was like, I got to make another one, got to make
01:08:35 a more challenging one. And I came up with Big Hero 6, but ever, but with all the nouns
01:08:41 replaced with things you can do at Sakurakan. But then when someone dies, the video skips
01:08:47 ahead to the end, because I gave up on making it. I spent three hours making like the first 20
01:08:53 minutes of it. And then I'm like, okay, I don't have time for another hour and 50 minutes. I'm
01:08:59 I'm just going to come up with an excuse for it to end. So it would have been amazing if I'd
01:09:05 actually put in all the work, but not quite worth my time. And that made me, uh, yeah, doing that
01:09:15 made me kind of burned out. You know, I finally made me like, huh, that was like really exhausting
01:09:21 to do. Like it wasn't hard. It wasn't complicated. It was just tedious, which was interesting,
01:09:27 getting something so tedious to do after like six straight days of this programming stuff,
01:09:32 which has been all fun, because I'm not actually making any programs, which can be tedious when
01:09:37 you're like debugging it and like figuring out problems, but just learning it, which is super
01:09:42 fun. I totally forgot how fun it is to learn a brand new thing. Yeah. Oh, yeah, suddenly did
01:09:49 something tedious and I felt like having a decompression or a rather to compress myself even
01:09:57 harder to go crazy, which is why I called this this video what it is. I don't relax by relaxing.
01:10:07 I relaxed by going crazier, I guess. I relaxed by like doing something intense.
01:10:24 Like, you know, my goal was to talk softly and slowly during all of this, but I feel like I've
01:10:29 been way too fast and loud for that. Not very good at relaxing ever.
01:10:38 I guess I probably just sleep extra long to compensate for it.
01:10:45 Where am I going with this? I guess I'm basically done with my point.
01:10:50 Yeah, that was my idea was to, uh, was to record this because of that,
01:10:54 so to book in this weird turn in the memes I did today and to tell people what's been going on
01:11:00 with me, you know, I haven't mentioned any of this in on my Twitter or anywhere else. I mean,
01:11:05 okay, I've been mentioning that I've been programming, but none of the whole background
01:11:09 narrative behind it. I actually, I actually re-recorded the last like hour of this, by the way.
01:11:17 You may have noticed that right around what I'm talking about PowerPoint,
01:11:21 uh, the audio made change in sound. That's because the last latter 40 minutes of my original
01:11:27 recording, like just shat itself and died. And I'm like, well, that's weird. But now I don't mind
01:11:33 because, uh, like I delivered this all way better and more extensively this time. So it's definitely
01:11:41 better as a result. But I guess it was even less like a decompression or a recompression because
01:11:47 this was now me putting in a lot of effort to make all the points again. But more succinctly this
01:11:52 time, I did a much better job explaining myself this time. Um, now I'm just going to hope that
01:11:58 this recording doesn't die on me again. Uh, yeah. Okay. So get relaxed and compressed by the freaking
01:12:08 music, man. So long.
01:12:20 Yeah.
01:13:38 Hey.
01:14:08 You
